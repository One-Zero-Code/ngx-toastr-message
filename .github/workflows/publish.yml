name: Publish ngx-toastr-message

# Trigger only on tags like v1.0.0
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Clean npm
        run: |
          rm -rf node_modules package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Run tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Build ngx-toastr-message
        run: npm run build ngx-toastr-message

      - name: Publish to npm
        run: cd dist/ngx-toastr-message && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}



# name: Publish ngx-toastr-message

# # Trigger only on tags like v1.0.0
# on:
#   push:
#     tags:
#       - 'v*.*.*'

# jobs:
#   publish:
#     runs-on: ubuntu-latest
#     steps:

#       # Checkout code
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       # Setup Node.js
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'  # stable for Angular builds
#           registry-url: 'https://registry.npmjs.org'

#       # Clean node_modules and package-lock.json
#       - name: Clean npm
#         run: |
#           rm -rf node_modules package-lock.json

#       # Install dependencies
#       - name: Install dependencies
#         run: npm install

#       # Build library
#       - name: Build ngx-toastr-message
#         run: npm run build ngx-toastr-message

#       # Publish to npm
#       - name: Publish to npm
#         run: cd dist/ngx-toastr-message && npm publish --access public
#         env:
#           NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
